<!DOCTYPE html>  <html lang="en">  
<head>  
  <meta charset="UTF-8" />  
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>  
  <title>Group Member Registration</title>  
  <link rel="stylesheet" href="style.css"/>  
  <!--
  <style>  
    /* Minimal safety CSS so the preview looks ok if style.css missing */  
    body { font-family: Arial, sans-serif; background:#f7f9fc; padding:20px; }  
    .container { max-width:820px; margin:auto; background:#fff; padding:20px; border-radius:8px; box-shadow:0 2px 8px rgba(0,0,0,0.06); }  
    .form-group { margin-bottom:12px; }  
    label { display:block; margin-bottom:6px; color:#222; }  
    input, select, button { width:100%; padding:10px; border-radius:6px; border:1px solid #ccc; font-size:15px; }  
    button { cursor:pointer; background:#003049; color:#fff; border:none; margin-top:6px; }  
    button.secondary { background:#f77f00; }  
    .hidden { display:none; }  
    h2 { text-align:center; color:#003049; margin-bottom:14px; }  
    .small { font-size:0.9rem; color:#555; }  
    .two-col { display:grid; grid-template-columns:1fr 1fr; gap:12px; }  
    @media (max-width:600px){ .two-col{ grid-template-columns:1fr; } }  
  
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
</style>-->
  
  <style>
  /* Common hidden utility */
.hidden {
  display: none;
}

/* Register spinner */
.spinner {
  border: 4px solid transparent;
  border-top: 4px solid red;
  border-right: 4px solid green;
  border-bottom: 4px solid blue;
  border-left: 4px solid yellow;
  border-radius: 50%;
  width: 18px;
  height: 18px;
  animation: spin 1s linear infinite;
  margin-left: 6px;
}

/* Preview spinner (grey) */
.spinner-preview {
  border: 4px solid transparent;
  border-top: 4px solid grey;
  border-right: 4px solid lightgrey;
  border-bottom: 4px solid darkgrey;
  border-left: 4px solid silver;
  border-radius: 50%;
  width: 18px;
  height: 18px;
  animation: spin 1s linear infinite;
  margin-left: 6px;
}

/* Spin animation */
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.preview-spinner {
  border: 3px solid #ccc;
  border-top: 3px solid #555;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  display: inline-block;
  animation: spin 1s linear infinite;
  margin-left: 8px;
  vertical-align: middle;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
  </style>
  
  

  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>   
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>  
</head>  
<body>   
  <div class="container">  
    <h2>Group Membership Registration</h2>  <!-- State Selection -->  
<div class="form-group">  
  <label for="state">Select State:</label>  
  <select id="state" required>  
    <option value="">-- Select State --</option>  
    <option value="ogun">Ogun State</option>  
  </select>  
</div>  

<!-- LGA (activates after state) -->  
<div class="form-group hidden" id="lga-group">  
  <label for="lga">Select Local Government:</label>  
  <select id="lga" required></select>  
</div>  

<!-- Ward (activates after LGA) -->  
<div class="form-group hidden" id="ward-group">  
  <label for="ward">Select Ward:</label>  
  <select id="ward" required></select>  
</div>  

<!-- Polling Unit (activates after Ward) -->  
<div class="form-group hidden" id="unit-group">  
  <label for="unit">Select Polling Unit:</label>  
  <select id="unit" required></select>  
</div>  

<!-- BioData (activates after Unit) -->  
<form class="hidden" id="biodata-form" autocomplete="off">  
  <h3>Bio Data</h3>  

  <div class="form-group">  
    <label for="fullname">Full Name:</label>  
    <input type="text" id="fullname" required />  
  </div>  

  <div class="two-col">  
    <div class="form-group">  
      <label for="dob">Date of Birth:</label>  
      <input type="date" id="dob" required />  
    </div>  

    <div class="form-group">  
      <label for="age">Age:</label>  
      <input type="text" id="age" disabled />  
    </div>  
  </div>  
  <div class="form-group">
  <label for="gender">Gender:</label>
  <select id="gender" required>
    <option value="">-- Select Gender --</option>
    <option value="Male">Male</option>
    <option value="Female">Female</option>
    <option value="Other">Other</option>
  </select>
</div>
<div class="form-group">  
  <label for="phone">Phone Number:</label>  
  <input type="tel" id="phone" placeholder="+234xxxxxxxxxx" required />  
</div>

 <div class="form-group">  
    <label for="address">Address:</label>  
    <input type="text" id="address" />  
  </div>  

  <div class="form-group">  
    <label>Are you a registered voter?</label>  
    <select id="isVoter" required>  
      <option value="">-- Select --</option>  
      <option value="yes">Yes</option>  
      <option value="no">No</option>  
    </select>  
  </div>  

  <div class="form-group hidden" id="vin-group">  
    <label for="vin">Enter Voter Identification Number (VIN):</label>  
    <input type="text" id="vin" />  
  </div>  

  <div class="form-group">  
    <label>Are you a registered party member?</label>  
    <select id="isPartyMember" required>  
      <option value="">-- Select --</option>  
      <option value="yes">Yes</option>  
      <option value="no">No</option>  
    </select>  
  </div>  

  <div class="form-group hidden" id="party-id-group">  
    <label for="partyId">Enter Party Membership ID:</label>  
    <input type="text" id="partyId" />  
  </div>  

<!-- Register Button -->
<div class="form-group">
  <button type="submit" id="register-btn" class="primary">
    Register <span id="register-spinner" class="spinner hidden"></span>
  </button>
</div>

<!-- Preview Button -->
<div class="form-group">
  <button type="button" id="preview-btn" class="secondary">
    Preview Registration <span id="preview-spinner" class="spinner-preview hidden"></span>
  </button>
</div>



  

  

  


  <!-- Admin only field -->  
  <div class="form-group hidden" id="timestamp-group">  
    <label>Registration Time (Admin Only):</label>  
    <input type="text" id="regTime" disabled />  
  </div>  
</form>  

<p class="note small">  
  Only authorized Ward Secretaries or Chairmen can register members from their own ward.  
</p>  
<p><a href="admin.html">Go to Admin Dashboard</a></p>

  </div>  
  <script>
  // ====== LOCATION DATA (placeholder wards) ======
  
const data = {
  ogun: {
    "Ijebu Ode": {
      "Ward-1": [
        "001-Beside Co-Operative Building (Existing)",
        "002-Emmanuel School I, Italupe (Existing)",
        "003-Moslem School, Isoku (Existing)",
        "004-Front of Talabi’s House, Olisa Street I (Existing)",
        "005-Imoru Road Junction (Existing)",
        "006-Oke-Ola Ilorin (Existing)",
        "007-Emmanuel School II (Existing)",
        "008-Front of Talabi’s House, Olisa Street II (Existing)",
        "009-Adjacent A. B Sunmola House, Ijagun Road (New)",
        "010-Beside 3A’s Hotel, Imoru Road (New)",
        "011-Moslem School II, Ondo Road (New)"
      ],
      "Ward-2": [
        "001-Baptist Day School, Ereko (Existing)",
        "002-Front of Our Lady’s School (Existing)",
        "003-Front of Alhaji Kukoyi’s House (Existing)",
        "004-Opposite Itajana Mosque (Existing)",
        "005-State Hospital (Existing)",
        "006-Dental Centre (Existing)",
        "007-By Odo Esa Premier Mosque Near Idiroko, Olisa (New)",
        "008-Saka Ashiru Junction via Mayomayo (New)",
        "009-Open Space by Olorungbebe Mosque (New)",
        "010-Jimileyin Junction, Adjacent Irepodun Mosque (New)",
        "011-Open Space at Oguntuga Four Junction (New)"
      ],
      "Ward-3": [
        "001-Moslem School, Etitale I (Existing)",
        "002-Opposite Oloritun’s House (Existing)",
        "003-Front of Igboburo Mosque (Existing)",
        "004-Front of Balogun Kuku’s House (Existing)",
        "005-Isokun / Itaogbe Junction (Existing)",
        "006-Moslem School, Etitale II (Existing)",
        "007-Ahmadiyah Movement B/S, Araromi (New)"
      ],
      "Ward-4": [
        "001-Old Wasimi School Hall (Existing)",
        "002-Joke Taiwo Pry. School (Existing)",
        "003-Balogun Kuku Road (Existing)",
        "004-Otubu Memorial School (Existing)",
        "005-Iyanro Mosque (Existing)",
        "006-Oke Aje, Back of Ajayi’s House (Existing)",
        "007-Open Space at Moborode / Gbelegbuwa Junction (New)",
        "008-Open Space at Itapakura / Olode Junction (New)"
      ],
      "Ward-5": [
        "001-Front of Olisa’s Palace (Existing)",
        "002-Old Ijada Market (Existing)",
        "003-Omoluwabi Pry. School, Imepe (Existing)",
        "004-Moslem Pry. Sch., Imepe (Existing)",
        "005-U.N.A. Pry. Sch., Imepe (Existing)",
        "006-Orunse Area (Existing)",
        "007-Idomowo/Imose (Existing)",
        "008-Wasimi Pry. School (Existing)",
        "009-Idele (Existing)",
        "010-Ayeru/Ajegunle (Existing)",
        "011-Ipamuren Mosque (Existing)",
        "012-Beside Ramdat Hotel, Oguntuga St, Ijebu Ode (Existing)",
        "013-Open Space at Oya Junction by Adelaja Str. (New)",
        "014-Ajegunle / Ijada Street by Iya Adam Food Canteen (New)",
        "015-Open Space by Satina Hotel, Off Ondo Road (New)",
        "016-Open Space by Olorunosun / Satina Junction, Ondo Road (New)",
        "017-Open Space at Orunse – Jaginrin Junction, Imepe (New)",
        "018-Open Space at Alhaji Sodiq Street near Olatoye House by Cele (New)",
        "019-Cele T-Junction by Kowa Hospital, Off Ejinrin Road (New)",
        "020-Open Space Front of Bishop Court, Ejinrin Road (New)",
        "021-Caterpillar Junction, Adefisan Road, Off Ejinrin Road (New)",
        "022-Akintonde Plaza by Oyingbo Junction (New)",
        "023-Front of Halidu Mosque, Idele Junction (New)"
      ],
      "Ward-6": [
        "001-Muslem College (Existing)",
        "002-Opposite Apeloko (Existing)",
        "003-Opposite L.G. Works Dept. (Existing)",
        "004-Beside Isasa Mosque (Existing)",
        "005-Christ Church School, Molode (Existing)",
        "006-Ayegbami Wasimi Junction (Existing)",
        "007-Ojofa/Alapo Junction (Existing)",
        "008-Mobegelu St. (In front Olowu’s House) (Existing)",
        "009-Adeola Odutola College (Existing)",
        "010-Local Govt. Maternity Centre (Existing)",
        "011-Fidipote Adeola Junction (New)",
        "012-Open Space at Ayegbami Abass Street Junction (New)",
        "013-Open Space at Mukeke Junction by Moslem College Road (New)",
        "014-Open Space at Middle of Kaka Street, Tanimola Junction (New)",
        "015-Moslem Primary School, Molode (New)",
        "016-Open Space Agbaje Junction, by Transformer (New)",
        "017-Open Space at Alebiosu Street, Dupmos Junction (New)"
      ],
      "Ward-7": [
        "001-Front of Babalola’s House (Existing)",
        "002-Ijebu-Ode Grammar School (Existing)",
        "003-Christ Church Sch., Porogun (Existing)",
        "004-A.G.G.S., Obalende (Existing)",
        "005-Abeokuta Road, Front of Alowolodu (Existing)",
        "006-Ogbagba Street (Middle Front of Alawonle) (Existing)",
        "007-Italapo Mosque (Existing)",
        "008-Middle Alapo Street, (In front of Mosque) (Existing)",
        "009-Abeokuta Rd (In front of Olufowobi’s House) (Existing)",
        "010-Fisigboye – Ehindin Junction by Ijebu-Ode Local Government Secretariat (New)",
        "011-Open Space at Alatishe Mosque by Total Filling Station (New)",
        "012-Degun Junction, Obalende (New)",
        "013-Open Space Beside Obalende Police Station (New)",
        "014-Open Space by Ogunbule Junction, Olorunsogo (New)",
        "015-Open Space Lewu Junction Beside Seico House (New)",
        "016-Omosanya Olaonipekun Junction, Off Degun (New)",
        "017-Fidipote Junction, Off Fusigboye Road (New)",
        "018-Open Space at Alafia / Jaura Church Junction (New)"
      ],
      "Ward-8": [
        "001-Our Saviour’s Pry. School (Existing)",
        "002-Front of Bata Shop (Existing)",
        "003-Wesley School (Existing)",
        "004-C.A.C. School, Degun (Existing)",
        "005-Idepo Junction (Existing)",
        "006-Araromi/Iloro Junction (Existing)",
        "007-Odutola St. (Beside Odupele Street) (Existing)",
        "008-Molipa (In front Ogo-Oluwa Bakery) (Existing)",
        "009-Molipa High School (Existing)",
        "010-Odupele / Ogunyoku Junction (Existing)",
        "011-Osimore Junction (Existing)",
        "012-Open Space by Kenny Block Industry, Ilamo Area (New)",
        "013-Open Space by Ajiroba House (New)",
        "014-Open Space at Awoyemi Junction (New)",
        "015-Open Space at Alaiyepe Olugbile Junction, Molipa (New)",
        "016-Old Epic School / Cele Church Junction, Behind Prime Hotel (New)",
        "017-Open Space by Four Number Junction, Molipa Road (New)",
        "018-Open Space at Degun Junction by Onalaja Street, Off Folagbade Road (New)",
        "019-Open Space by Ogunba-Olasunbo Junction, Off Folagbade Road (New)",
        "020-Open Space by Zipest Filling Station, Opposite Soye Mosque (New)",
        "021-Ayesan Market Gate, Ayesan Area (New)",
        "022-Awoyelu-Jogbo Health Centre (New)",
        "023-Open Space at Lekuti Oke Junction (New)",
        "024-Open Space Opposite Mahdiyat Mosque, Idepo Street (New)",
        "025-Open Space Front of Ogun State Television, Ijebu Ode (New)",
        "026-Open Space at Osifeso/Odutola Street, Ijebu Ode (New)",
        "027-C.A.C. School, Degun (2) (New)",
        "028-C.A.C. Church by Post Office / C.M.S Bookshop, Folagbade (New)"
      ],
      "Ward-9": [
        "001-St. Augustine Catholic School (Existing)",
        "002-A.U.D. Pry. Sch. I, Bonojo (Existing)",
        "003-A.U.D. Pry. Sch. II, Onirugba (Existing)",
        "004-Govt. Technical College (Existing)",
        "005-Ezekiel Awoyelu Junction (Existing)",
        "006-Beside Ijebu-Ode Stadium (Existing)",
        "007-Tai Solarin College of Education (Existing)",
        "008-Old Odo Egbo Market (Existing)",
        "009-Ahmadiyya Mosque (Existing)",
        "010-K. Mansion (Existing)",
        "011-Igbeba / Elebute Junction (Existing)",
        "012-Bonjo / Odutola Street (Existing)",
        "013-GRA off Awujale Street (Middle) (Existing)",
        "014-End of Bonojo Eleruku (New)",
        "015-Olufowobi by Bonojo Four Junction (New)",
        "016-Mahdiyat Primary School (New)",
        "017-Adeben Place Hotel Junction, Igbeba (New)",
        "018-V.I.O Centre, Eruwon Road (New)",
        "019-Luba Comprehensive School, Off Erunwon Road (New)",
        "020-Open Space in front of Eid Praying Ground, Idobi (New)",
        "021-Open Space at New Road by Alafia Junction / Akiniganyin (New)"
      ],
      "Ward-10": [
        "001-Christ Church Pry. School – Isiwo (Existing)",
        "002-Ayeteju Maternity (Existing)",
        "003-Odo/Asoyin Pry. Sch. (Existing)",
        "004-Okelisa (Opposite New Mosque) (Existing)",
        "005-Odo Lofa (Existing)",
        "006-St. Patrick School, Isiwo (Existing)",
        "007-Ansarudeen High School, Isiwo (Existing)"
      ],
      "Ward-11": [
        "001-St. Alloysius School, Iloti (Existing)",
        "002-Odosengolu (Existing)",
        "003-Odo-Arewa Market (Existing)",
        "004-Okenla Tomoba Pry. Sch. (Existing)",
        "005-Local Government School, Idale (Existing)",
        "006-St. Joseph Odonoko (Existing)",
        "007-St. Joseph School, Odonoko (Existing)",
        "008-Oke-Ako (Existing)",
        "009-St. Anne’s School, Irawo (Existing)",
        "010-Tomoba Village (Existing)"
      ]
    }
  }
};
    
  // ====== DOM elements ======
  const stateEl = document.getElementById("state");
  const lgaEl = document.getElementById("lga");
  const wardEl = document.getElementById("ward");
  const unitEl = document.getElementById("unit");
  const lgaGroup = document.getElementById("lga-group");
  const wardGroup = document.getElementById("ward-group");
  const unitGroup = document.getElementById("unit-group");
  const biodataForm = document.getElementById("biodata-form");
  const dobEl = document.getElementById("dob");
  const ageEl = document.getElementById("age");
  const isVoterEl = document.getElementById("isVoter");
  const vinGroup = document.getElementById("vin-group");
  const vinEl = document.getElementById("vin");
  const isPartyEl = document.getElementById("isPartyMember");
  const partyIdGroup = document.getElementById("party-id-group");
  const regTime = document.getElementById("regTime");
  const timestampGroup = document.getElementById("timestamp-group");

  // ====== SheetDB endpoint ======
  const sheetDB_URL = "https://sheetdb.io/api/v1/ji8u767etbjge";

  // ====== Populate dropdowns ======
  stateEl.addEventListener("change", () => {
    const state = stateEl.value.toLowerCase();
    resetDropdown(lgaEl);
    resetDropdown(wardEl);
    resetDropdown(unitEl);
    hideElement(biodataForm);
    hideElement(wardGroup);
    hideElement(unitGroup);
    if (data[state]) {
      lgaGroup.classList.remove("hidden");
      for (let lga in data[state]) {
        const opt = document.createElement("option");
        opt.value = lga;
        opt.textContent = lga;
        lgaEl.appendChild(opt);
      }
    } else lgaGroup.classList.add("hidden");
  });

  lgaEl.addEventListener("change", () => {
    const state = stateEl.value.toLowerCase();
    const lga = lgaEl.value;
    resetDropdown(wardEl);
    resetDropdown(unitEl);
    hideElement(biodataForm);
    hideElement(unitGroup);
    if (data[state] && data[state][lga]) {
      wardGroup.classList.remove("hidden");
      for (let ward in data[state][lga]) {
        const opt = document.createElement("option");
        opt.value = ward;
        opt.textContent = ward;
        wardEl.appendChild(opt);
      }
    } else wardGroup.classList.add("hidden");
  });

  wardEl.addEventListener("change", () => {
    const state = stateEl.value.toLowerCase();
    const lga = lgaEl.value;
    const ward = wardEl.value;
    resetDropdown(unitEl);
    hideElement(biodataForm);
    if (data[state] && data[state][lga] && data[state][lga][ward]) {
      unitGroup.classList.remove("hidden");
      data[state][lga][ward].forEach(unit => {
        const opt = document.createElement("option");
        opt.value = unit;
        opt.textContent = unit;
        unitEl.appendChild(opt);
      });
    } else unitGroup.classList.add("hidden");
  });

  unitEl.addEventListener("change", () => {
    if (unitEl.value) biodataForm.classList.remove("hidden");
    else biodataForm.classList.add("hidden");
  });

  // ====== Age calculation ======
  dobEl.addEventListener("change", () => {
    if (!dobEl.value) {
      ageEl.value = "";
      return;
    }
    const dob = new Date(dobEl.value);
    const today = new Date();
    let age = today.getFullYear() - dob.getFullYear();
    const m = today.getMonth() - dob.getMonth();
    if (m < 0 || (m === 0 && today.getDate() < dob.getDate())) age--;
    ageEl.value = age;
  });

  // ====== VIN & Party toggles ======
  isVoterEl.addEventListener("change", () => {
    vinGroup.classList.toggle("hidden", isVoterEl.value !== "yes");
    if (isVoterEl.value !== "yes") vinEl.value = "";
  });

  isPartyEl.addEventListener("change", () => {
    partyIdGroup.classList.toggle("hidden", isPartyEl.value !== "yes");
    if (isPartyEl.value !== "yes") document.getElementById("partyId").value = "";
  });

  // ====== Admin timestamp ======
  document.addEventListener("DOMContentLoaded", () => {
    const isAdmin = true;
    if (isAdmin) {
      timestampGroup.classList.remove("hidden");
      regTime.value = new Date().toLocaleString();
    }
  });

  // ====== Utilities ======
  function resetDropdown(dropdown) {
    dropdown.innerHTML = '<option value="">-- Select --</option>';
  }
  function hideElement(el) {
    el.classList.add("hidden");
  }   
</script>

<!--
  <script>
// Disable Register Button on Submit
document.getElementById("register-btn")?.addEventListener("click", function() {
  this.disabled = true;
});

// Preview & Download PDF
document.getElementById("preview-btn").addEventListener("click", function () {
  const previewSpinner = document.getElementById("preview-spinner");
  previewSpinner.style.display = "inline-block";

  // Collect form data
  const formData = {
    "Full Name": document.getElementById("fullName")?.value || "",
    "Phone Number": document.getElementById("phoneNumber")?.value || "",
    "Gender": document.getElementById("gender")?.value || "",
    "State": document.getElementById("state")?.value || "",
    "LGA": document.getElementById("lga")?.value || "",
    "Ward": document.getElementById("ward")?.value || "",
    "Polling Unit": document.getElementById("pollingUnit")?.value || ""
  };

  setTimeout(() => {
    previewSpinner.style.display = "none";

    // Create HTML table
    let tableHTML = `
      <table border="1" style="border-collapse:collapse; width:100%;">
        <tr><th>Field</th><th>Value</th></tr>
        ${Object.entries(formData)
          .map(([key, value]) => `<tr><td>${key}</td><td>${value}</td></tr>`)
          .join("")}
      </table>
    `;

    // Open new window for preview
    const newWin = window.open("", "_blank");
    newWin.document.write(`
      <html><head><title>Registration Preview</title></head>
      <body>
        ${tableHTML}
        <script>
          window.print();
        <\/script>
      </body></html>
    `);
    newWin.document.close();

  }, 2000); // Spinner duration
});


  </script>
-->
  
<script>
// ===== REGISTER BUTTON HANDLER =====
const registerBtn = document.getElementById("register-btn");
const registerSpinner = document.getElementById("register-spinner");

biodataForm.addEventListener("submit", async (e) => {
  e.preventDefault();

  registerBtn.disabled = true;
  registerSpinner.classList.remove("hidden");

  const formData = {
    fullname: document.getElementById("fullname").value.trim(),
    phoneNumber: (() => {
      let raw = document.getElementById("phone").value.trim();
      return raw.startsWith("+234") ? raw : "+234" + raw.replace(/^0/, "");
    })(),
    address: document.getElementById("address").value.trim(),
    ward: wardEl.value,
    pollingUnit: unitEl.value,
    vin: vinEl.value.trim(),
    gender: document.getElementById("gender").value
  };

  // Validation
  const required = ["fullname", "phoneNumber", "address", "ward", "pollingUnit", "vin"];
  for (let field of required) {
    if (!formData[field]) {
      alert("Please fill in all required fields.");
      registerBtn.disabled = false;
      registerSpinner.classList.add("hidden");
      return;
    }
  }
  if (formData.vin.length !== 19) {
    alert("VIN must be exactly 19 characters.");
    registerBtn.disabled = false;
    registerSpinner.classList.add("hidden");
    return;
  }

  try {
    const res = await fetch("https://sheetdb.io/api/v1/ji8u767etbjge", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ data: [formData] })
    });

    if (!res.ok) throw new Error("Submission error");

    alert("Member registered successfully!");
    biodataForm.reset();
    hideElement(biodataForm);
    resetDropdown(lgaEl);
    resetDropdown(wardEl);
    resetDropdown(unitEl);
    lgaGroup.classList.add("hidden");
    wardGroup.classList.add("hidden");
    unitGroup.classList.add("hidden");

  } catch (err) {
    console.error(err);
    alert("Error submitting data.");
  } finally {
    registerBtn.disabled = false;
    registerSpinner.classList.add("hidden");
  }
});

// ===== PREVIEW BUTTON HANDLER =====
const previewBtn = document.getElementById("preview-btn");
const previewSpinner = document.getElementById("preview-spinner");

previewBtn.addEventListener("click", () => {
  previewSpinner.classList.remove("hidden");

  setTimeout(() => {
    previewSpinner.classList.add("hidden");

    const formData = new FormData(biodataForm);
    let tableHTML = "<table border='1' style='border-collapse:collapse;width:100%'><tr>";
    formData.forEach((_, key) => {
      tableHTML += `<th>${key}</th>`;
    });
    tableHTML += "</tr><tr>";
    formData.forEach((value) => {
      tableHTML += `<td>${value}</td>`;
    });
    tableHTML += "</tr></table>";

    const newWindow = window.open("", "_blank");
    newWindow.document.write(`
      <html>
        <head><title>Registration Preview</title></head>
        <body>${tableHTML}</body>
      </html>
    `);
    newWindow.document.close();
  }, 2000);
});

</script>

  
<!-- SAME AS ABOVE
<script>
// ===== REGISTER BUTTON HANDLER =====
const registerBtn = document.getElementById("register-btn");
const registerSpinner = document.getElementById("register-spinner");

biodataForm.addEventListener("submit", async (e) => {
  e.preventDefault();

  registerBtn.disabled = true;
  registerSpinner.classList.remove("hidden");

  const formData = {
    fullname: document.getElementById("fullname").value.trim(),
    phoneNumber: (() => {
      let raw = document.getElementById("phone").value.trim();
      return raw.startsWith("+234") ? raw : "+234" + raw.replace(/^0/, "");
    })(),
    address: document.getElementById("address").value.trim(),
    ward: wardEl.value,
    pollingUnit: unitEl.value,
    vin: vinEl.value.trim(),
    gender: document.getElementById("gender").value
  };

  // Validation
  const required = ["fullname", "phoneNumber", "address", "ward", "pollingUnit", "vin"];
  for (let field of required) {
    if (!formData[field]) {
      alert("Please fill in all required fields.");
      registerBtn.disabled = false;
      registerSpinner.classList.add("hidden");
      return;
    }
  }
  if (formData.vin.length !== 19) {
    alert("VIN must be exactly 19 characters.");
    registerBtn.disabled = false;
    registerSpinner.classList.add("hidden");
    return;
  }

  try {
    const res = await fetch("https://sheetdb.io/api/v1/ji8u767etbjge", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ data: [formData] })
    });

    if (!res.ok) throw new Error("Submission error");

    alert("Member registered successfully!");
    biodataForm.reset();
    hideElement(biodataForm);
    resetDropdown(lgaEl);
    resetDropdown(wardEl);
    resetDropdown(unitEl);
    lgaGroup.classList.add("hidden");
    wardGroup.classList.add("hidden");
    unitGroup.classList.add("hidden");

  } catch (err) {
    console.error(err);
    alert("Error submitting data.");
  } finally {
    registerBtn.disabled = false;
    registerSpinner.classList.add("hidden");
  }
});

// ===== PREVIEW BUTTON HANDLER =====
const previewBtn = document.getElementById("preview-btn");
const previewSpinner = document.getElementById("preview-spinner");

previewBtn.addEventListener("click", () => {
  previewSpinner.classList.remove("hidden");

  setTimeout(() => {
    previewSpinner.classList.add("hidden");

    const formData = new FormData(biodataForm);
    let tableHTML = "<table border='1' style='border-collapse:collapse;width:100%'><tr>";
    formData.forEach((_, key) => {
      tableHTML += `<th>${key}</th>`;
    });
    tableHTML += "</tr><tr>";
    formData.forEach((value) => {
      tableHTML += `<td>${value}</td>`;
    });
    tableHTML += "</tr></table>";

    const newWindow = window.open("", "_blank");
    newWindow.document.write(`
      <html>
        <head><title>Registration Preview</title></head>
        <body>${tableHTML}</body>
      </html>
    `);
    newWindow.document.close();
  }, 2000);
});
  
</script>
  -->
 <!-- 
<script>
// Insert this right before your existing form submit listener or wrap it after your DOM logic

// Locate form and add spinner inside button
const submitBtn = biodataForm.querySelector("button[type='submit']");
const spinner = document.createElement("span");
spinner.id = "submissionSpinner";
spinner.className = "spinner";
submitBtn.appendChild(spinner);

// Override your submit handler to include spinner logic
const originalSubmitHandler = biodataForm.onsubmit;
biodataForm.addEventListener("submit", async function(e) {
  e.preventDefault();

  // Disable submit and show spinner
  submitBtn.disabled = true;
  spinner.style.display = "inline-block";

  // Collect formData as before
  const formData = {
    fullname: document.getElementById("fullname").value.trim(),
    phoneNumber: (() => {
      let raw = document.getElementById("phone").value.trim();
      return raw.startsWith("+234") ? raw : "+234" + raw.replace(/^0/, "");
    })(),
    address: document.getElementById("address").value.trim(),
    ward: wardEl.value,
    pollingUnit: unitEl.value,
    vin: vinEl.value.trim(),
    gender: document.getElementById("gender").value
  };

  // Validation
  ['fullname','phoneNumber','address','ward','pollingUnit','vin'].forEach(id => {
    if (!formData[id]) {
      alert("Please fill in all required fields.");
      submitBtn.disabled = false;
      spinner.style.display = "none";
      throw new Error("Validation failed");
    }
  });
  if (formData.vin.length !== 19) {
    alert("VIN must be exactly 19 characters.");
    submitBtn.disabled = false;
    spinner.style.display = "none";
    return;
  }

  try {
    // Submit to SheetDB
    const res = await fetch("https://sheetdb.io/api/v1/ji8u767etbjge", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ data: [formData] })
    });
    if (!res.ok) throw new Error("Submission error");

    alert("Member registered successfully!");
    biodataForm.reset();
    hideElement(biodataForm);
    resetDropdown(lgaEl);
    resetDropdown(wardEl);
    resetDropdown(unitEl);
    lgaGroup.classList.add("hidden");
    wardGroup.classList.add("hidden");
    unitGroup.classList.add("hidden");

  } catch (err) {
    console.error(err);
    alert("Error submitting data.");
  } finally {
    submitBtn.disabled = false;
    spinner.style.display = "none";
  }
});
</script>
-->
<style>
/* Base styling */
body {
  font-family: Arial, sans-serif;
  background: #f7f9fc;
  padding: 20px;
  transition: background 0.3s, color 0.3s;
}
.container {
  max-width: 820px;
  margin: auto;
  background: #fff;
  padding: 30px;
  border-radius: 10px;
  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);
  min-height: 85vh;
  transition: background 0.3s, color 0.3s;
}
.form-group {
  margin-bottom: 14px;
}
label {
  display: block;
  margin-bottom: 6px;
  color: #222;
}
input, select, button {
  width: 100%;
  padding: 12px;
  border-radius: 6px;
  border: 1px solid #ccc;
  font-size: 16px;
}
button {
  cursor: pointer;
  background: #003049;
  color: #fff;
  border: none;
  margin-top: 8px;
  font-size: 16px;
}
button.secondary {
  background: #f77f00;
}
.hidden {
  display: none;
}
h1, h2, h3, h4 {
  text-align: center;
  color: #003049;
  margin-bottom: 14px;
  transition: color 0.3s;
}
.small {
  font-size: 0.9rem;
  color: #555;
}
.two-col {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 12px;
}
@media (max-width: 600px) {
  .two-col {
    grid-template-columns: 1fr;
  }
}

/* Dark Mode Styles */
body.dark-mode {
  background: #121212;
  color: #f1f1f1;
}
body.dark-mode .container {
  background: #1e1e1e;
  color: #f1f1f1;
}
body.dark-mode label {
  color: #ddd;
}
body.dark-mode h1,
body.dark-mode h2,
body.dark-mode h3,
body.dark-mode h4 {
  color: #fff;
}
body.dark-mode input,
body.dark-mode select,
body.dark-mode button {
  background: #2a2a2a;
  color: #fff;
  border: 1px solid #555;
}

/* Flip Switch Container */
.dark-mode-toggle {
  position: fixed;
  top: 50%;
  left: 20px;
  transform: translateY(-50%);
  z-index: 1000;
  background: #f0f0f0;
  border: 2px solid #222;
  padding: 6px;
  border-radius: 30px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.2);
  transition: background 0.3s, border-color 0.3s;
}
body.dark-mode .dark-mode-toggle {
  background: #333;
  border-color: #ccc;
}

/* Switch */
.switch {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 26px;
}
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}
.slider {
  position: absolute;
  cursor: pointer;
  background-color: #ccc;
  transition: 0.4s;
  border-radius: 34px;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}
  
.slider:before {
  position: absolute;
  content: "";
  height: 22px;
  width: 22px;
  left: 2px;
  bottom: 2px;
  background-color: white;
  transition: 0.4s;
  border-radius: 50%;
}
/* Checked State */
input:checked + .slider {
  background-color: #4caf50;
}
input:checked + .slider:before {
  transform: translateX(24px) rotate(360deg);
}
</style>
<!-- Dark Mode Switch -->
<label class="switch">
  <input type="checkbox" id="darkModeSwitch">
  <span class="slider"></span>
</label>

<script>
document.getElementById("darkModeSwitch").addEventListener("change", function () {
  document.body.classList.toggle("dark-mode", this.checked);
});
</script>
  
  <script>
// REGISTER BUTTON BEHAVIOR
document.getElementById("register-btn").addEventListener("click", function () {
  const btn = document.getElementById("register-btn");
  const spinner = document.getElementById("register-spinner");

  btn.style.display = "none"; // hide the button text
  spinner.classList.remove("hidden"); // show spinner
});

// PREVIEW BUTTON BEHAVIOR
document.getElementById("preview-btn").addEventListener("click", function () {
  const btn = document.getElementById("preview-btn");
  const spinner = document.getElementById("preview-spinner");

  btn.style.display = "none"; // hide the button text
  spinner.classList.remove("hidden"); // show spinner

  // simulate preview process, re-enable after some seconds
  setTimeout(() => {
    btn.style.display = "inline-block"; // show the button again
    spinner.classList.add("hidden"); // hide spinner
  }, 3000); // adjust preview time
});
</script>



</body>  
</html>
